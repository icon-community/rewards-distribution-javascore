version = '0.1.0'

dependencies {
    compileOnly 'foundation.icon:javaee-api:0.9.6'
    implementation 'foundation.icon:javaee-scorex:0.5.2'

    annotationProcessor 'foundation.icon:javaee-score-client:0.10.3'
    compileOnly 'foundation.icon:javaee-score-client:0.10.3'

    testImplementation 'foundation.icon:javaee-unittest:0.12.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.3'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.3'
}

optimizedJar {
    mainClassName = 'contract.Contract'
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    def runtimeClasspathFiles = configurations.runtimeClasspath.collect { it }
    println "Runtime classpath files: ${runtimeClasspathFiles}"

    if (runtimeClasspathFiles.size() > 0) {
        from {
            runtimeClasspathFiles.collect {
                if (it.isDirectory()) {
                    it
                } else {
                    zipTree(it)
                }
            }
        }
    } else {
        println "Warning: runtimeClasspath is empty"
    }

    archivesBaseName = 'contract'
    enableDebug = true
}


// optimizedJar {
//     mainClassName = 'contract.Contract'
//     duplicatesStrategy = DuplicatesStrategy.EXCLUDE
//     from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
//     archivesBaseName = 'contract'

//     enableDebug = true
// }

test {
    useJUnitPlatform()
    testLogging.showStandardStreams = true
}
